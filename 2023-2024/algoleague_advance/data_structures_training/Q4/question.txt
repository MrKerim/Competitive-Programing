It's no surprise that Jotform receives many job and internship applications because it's one of the world's best companies and has the happiest employees.

Therefore, Jotform needs to select its employees through specific tests. For this job, Yigit and Hasim were assigned. In order to measure the happiness levels, Yigit and Hasim want to ask N different categories of questions. They numbered these N different types of questions from 1 to N.

Once a new question had been found by the HUPROG problem setter team, they categorized it appropriately. When Yigit and Hasim create a test consisting of N different categories of 1 question each, they need to report it. Can you help them?

Every time the Huprog problem setter team adds a new question, you are expected to write 'Y' if we can create a contest with our existing questions or 'N' if we cannot. They end up with M questions.

Note: Same questions cannot be used in different tests. Questions that have never been used in a test before can be used to create a new test.

Note: In PyPy, adding a character to a string involves creating a new string with the combined content instead of directly modifying the original string, resulting in linear time complexity rather than constant time. However, this can be mitigated by employing an array for concatenation and using print(*array, sep='') for the final result.

Input Format
The first line contains two integers N and M — Number of different types of questions and the total number of questions.
The second line contains a space-separated integer array A with M integers — types of questions.

Output Format
Print a string containing M characters. The ith character should be Y if Yigit and Hasim can report after the creation of the ith question, and N otherwise.

Constraints
1 ≤ N, M ≤ 2 × 10^5
1 ≤ Ai ≤ N

Sample Input 1
3 11
2 3 1 2 2 2 3 2 2 3 1

Sample Output 1
NNYNNNNNNNY

Explanation 1:
Yigit and Hasim should report after the first three questions because they are different types. And then only after the last question.

Sample Input 2
4 11
2 3 4 3 2 1 4 1 2 2 3

Sample Output 2
NNNNNYNYNNN
